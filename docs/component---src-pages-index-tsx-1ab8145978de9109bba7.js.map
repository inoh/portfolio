{"version":3,"file":"component---src-pages-index-tsx-1ab8145978de9109bba7.js","mappings":"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","sources":["webpack://portfolio/./node_modules/lucide-react/dist/esm/icons/chevron-down.js","webpack://portfolio/./src/components/sections/Hero.tsx","webpack://portfolio/./src/components/common/ErrorBoundary.tsx","webpack://portfolio/./src/pages/index.tsx","webpack://portfolio/./node_modules/lucide-react/dist/esm/icons/github.js","webpack://portfolio/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/noop.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/array.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/progress.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/memo.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://portfolio/./node_modules/motion-utils/dist/es/is-object.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://portfolio/./node_modules/motion-dom/dist/es/utils/is-html-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://portfolio/./node_modules/lucide-react/dist/esm/icons/external-link.js","webpack://portfolio/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://portfolio/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://portfolio/./node_modules/lucide-react/dist/esm/Icon.js","webpack://portfolio/./node_modules/lucide-react/dist/esm/createLucideIcon.js"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]];\nconst ChevronDown = createLucideIcon(\"chevron-down\", __iconNode);\n\nexport { __iconNode, ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { ChevronDown, Github, ExternalLink } from 'lucide-react';\n\nexport default function Hero() {\n  const socialLinks = [\n    {\n      name: 'GitHub',\n      url: 'https://github.com/inoh',\n      icon: Github,\n    },\n    {\n      name: 'Zenn',\n      url: 'https://zenn.dev/ino_h',\n      icon: ExternalLink,\n    },\n  ];\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.3,\n        delayChildren: 0.2,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 30 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  return (\n    <>\n      {/* スキップリンク */}\n      <a\n        href=\"#main-content\"\n        className=\"sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary-600 text-white px-4 py-2 rounded-md z-50\"\n      >\n        メインコンテンツにスキップ\n      </a>\n      \n      <section \n        className=\"min-h-screen flex items-center justify-center relative bg-gradient-to-br from-gray-50 to-gray-100\"\n        aria-label=\"ヒーローセクション\"\n      >\n      <motion.div\n        className=\"container mx-auto px-6 text-center\"\n        variants={containerVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n      >\n        <motion.div \n          variants={itemVariants} \n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"mb-8\"\n        >\n          <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-bold text-gray-900 mb-4 leading-tight\">\n            井上 <span className=\"text-primary-600\">裕之</span>\n          </h1>\n          <h2 className=\"text-lg sm:text-xl md:text-2xl text-gray-600 mb-6 font-medium\">\n            フリーランス フルスタックエンジニア\n          </h2>\n        </motion.div>\n\n        <motion.p\n          variants={itemVariants}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"text-base sm:text-lg md:text-xl text-gray-700 max-w-4xl mx-auto mb-8 leading-relaxed px-4 sm:px-0\"\n        >\n          25年の経験を持つフルスタックエンジニアとして、\n          <br className=\"hidden sm:block\" />\n          Ruby on Rails、AWS、React/Reduxを軸に\n          <br className=\"hidden sm:block\" />\n          スケーラブルなWebアプリケーションを設計・開発しています。\n        </motion.p>\n\n        <motion.div\n          variants={itemVariants}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-6 mb-12 px-4 sm:px-0\"\n        >\n          {socialLinks.map((link) => {\n            const IconComponent = link.icon;\n            return (\n              <motion.a\n                key={link.name}\n                href={link.url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                aria-label={`${link.name}のプロフィールページを開く（新しいタブで開きます）`}\n                className=\"inline-flex items-center px-6 py-3 sm:px-8 sm:py-4 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors duration-200 font-medium min-w-[140px] justify-center focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <IconComponent className=\"w-5 h-5 mr-2\" />\n                {link.name}\n              </motion.a>\n            );\n          })}\n        </motion.div>\n\n        <motion.div\n          variants={itemVariants}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n          className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2\"\n        >\n          <motion.div\n            animate={{\n              y: [0, 10, 0],\n            }}\n            transition={{\n              duration: 2,\n              repeat: Infinity,\n              ease: 'easeInOut',\n            }}\n          >\n            <ChevronDown className=\"w-8 h-8 text-gray-400\" />\n          </motion.div>\n        </motion.div>\n      </motion.div>\n    </section>\n    </>\n  );\n}","import React, { Component, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div className=\"min-h-[200px] flex items-center justify-center bg-gray-50 rounded-lg border\">\n          <div className=\"text-center p-6\">\n            <div className=\"text-red-500 text-2xl mb-2\">⚠️</div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n              エラーが発生しました\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              このセクションの読み込み中にエラーが発生しました。\n            </p>\n            <button\n              onClick={() => this.setState({ hasError: false })}\n              className=\"px-4 py-2 bg-primary-600 text-white rounded hover:bg-primary-700 transition-colors\"\n            >\n              再試行\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}","import React, { Suspense, lazy } from 'react';\nimport { HeadFC, PageProps } from 'gatsby';\nimport Hero from '../components/sections/Hero';\nimport { ErrorBoundary } from '../components/common/ErrorBoundary';\n\nconst About = lazy(() => import('../components/sections/About'));\nconst Skills = lazy(() => import('../components/sections/Skills'));\nconst Articles = lazy(() => import('../components/sections/Articles'));\nconst Footer = lazy(() => import('../components/common/Footer'));\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <>\n      <Hero />\n      \n      <main id=\"main-content\" className=\"min-h-screen\" role=\"main\">\n        <ErrorBoundary>\n          <Suspense fallback={<div className=\"h-96 bg-gray-50 animate-pulse\" />}>\n            <About />\n          </Suspense>\n        </ErrorBoundary>\n        \n        <ErrorBoundary>\n          <Suspense fallback={<div className=\"h-96 bg-gray-50 animate-pulse\" />}>\n            <Skills />\n          </Suspense>\n        </ErrorBoundary>\n        \n        <ErrorBoundary>\n          <Suspense fallback={<div className=\"h-96 bg-gray-50 animate-pulse\" />}>\n            <Articles />\n          </Suspense>\n        </ErrorBoundary>\n      </main>\n      \n      <ErrorBoundary>\n        <Suspense fallback={<div className=\"h-64 bg-gray-900 animate-pulse\" />}>\n          <Footer />\n        </Suspense>\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => {\n  return (\n    <>\n      <html lang=\"ja\" />\n      <title>井上 裕之 | フリーランス フルスタックエンジニア</title>\n      <meta name=\"description\" content=\"25年の経験を持つフルスタックエンジニア。Ruby on Rails、AWS、React/Reduxを軸にスケーラブルなWebアプリケーションを開発しています。\" />\n      <meta name=\"keywords\" content=\"フリーランス, フルスタックエンジニア, Ruby on Rails, AWS, React, Redux, TypeScript, 井上裕之\" />\n      <meta name=\"author\" content=\"井上 裕之\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      \n      {/* Open Graph */}\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:locale\" content=\"ja_JP\" />\n      <meta property=\"og:url\" content=\"https://ino-h.net\" />\n      <meta property=\"og:site_name\" content=\"井上 裕之 | フリーランス フルスタックエンジニア\" />\n      <meta property=\"og:title\" content=\"井上 裕之 | フリーランス フルスタックエンジニア\" />\n      <meta property=\"og:description\" content=\"25年の経験を持つフルスタックエンジニア。Ruby on Rails、AWS、React/Reduxを軸にスケーラブルなWebアプリケーションを開発しています。\" />\n      <meta property=\"og:image\" content=\"/og-image.png\" />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:image:alt\" content=\"井上 裕之 | フリーランス フルスタックエンジニア\" />\n      \n      {/* Twitter Card */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content=\"井上 裕之 | フリーランス フルスタックエンジニア\" />\n      <meta name=\"twitter:description\" content=\"25年の経験を持つフルスタックエンジニア。Ruby on Rails、AWS、React/Reduxを軸にスケーラブルなWebアプリケーションを開発しています。\" />\n      <meta name=\"twitter:image\" content=\"/og-image.png\" />\n      \n      {/* Robots */}\n      <meta name=\"robots\" content=\"index, follow\" />\n      \n      {/* Fonts */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Noto+Sans+JP:wght@400;500;600;700&display=swap\" rel=\"stylesheet\" />\n    </>\n  );\n};","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\",\n      key: \"tonef\"\n    }\n  ],\n  [\"path\", { d: \"M9 18c-4.51 2-5-2-7-2\", key: \"9comsn\" }]\n];\nconst Github = createLucideIcon(\"github\", __iconNode);\n\nexport { __iconNode, Github as default };\n//# sourceMappingURL=github.js.map\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\n];\nconst ExternalLink = createLucideIcon(\"external-link\", __iconNode);\n\nexport { __iconNode, ExternalLink as default };\n//# sourceMappingURL=external-link.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => createElement(\n    \"svg\",\n    {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: mergeClasses(\"lucide\", className),\n      ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n      ...rest\n    },\n    [\n      ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n      ...Array.isArray(children) ? children : [children]\n    ]\n  )\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n"],"names":["ChevronDown","d","key","Hero","socialLinks","name","url","icon","Github","ExternalLink","itemVariants","hidden","opacity","y","visible","React","href","className","motion","div","variants","transition","staggerChildren","delayChildren","initial","animate","duration","ease","p","map","link","IconComponent","a","target","rel","whileHover","scale","whileTap","repeat","Infinity","ErrorBoundary","_Component","props","_this","call","state","hasError","_inheritsLoose","getDerivedStateFromError","error","_proto","prototype","componentDidCatch","errorInfo","console","render","this","fallback","onClick","setState","children","Component","About","lazy","Skills","Articles","Footer","IndexPage","id","role","Suspense","Head","lang","content","property","crossOrigin","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","translateX","translateY","scaleX","scaleY","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","length","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","_bbox","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","postRender","processBatch","useManualTiming","performance","now","i","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","hasOwnProperty","splitColor","aName","bName","cName","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","transformPerspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","some","createBox","isBrowser","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","remove","removeChild","feature","isMounted","child","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","scheduleRenderMicrotask","DOMVisualElement","arguments","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","ref","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useRef","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","createMotionProxy","Proxy","componentCache","factory","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","combineFunctions","pipe","transformers","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","e","pow","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","toPascalCase","camelCase","p1","p2","toCamelCase","mergeClasses","classes","hasA11yProp","defaultAttributes","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","Icon","absoluteStrokeWidth","iconNode","rest","createLucideIcon","iconName"],"sourceRoot":""}